name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'renovate.json'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'renovate.json'

#  workflow_call:
#    inputs:
#      skip-tests:
#        description: Disable tests execution
#        type: boolean
#        default: false
#        required: false

permissions:
  packages: write

jobs:
  checks:
    name: Continuous Integration
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '19.0.2'
          distribution: 'zulu'
          architecture: 'x64'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          build-root-directory: app
      - name: Linter check
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          build-root-directory: app
          arguments: spotlessCheck -x jibDockerBuild
      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          build-root-directory: app
          arguments: build -x test -x mindeeTest -x koverGenerateArtifact -x koverXmlReport -x koverVerify
      - name: Test
        if: ${{ !contains(github.event.head_commit.message, 'mindee') }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          build-root-directory: app
          arguments: test
        env:
          INSEE_BASE_API: ${{vars.INSEE_BASE_API}}
          INSEE_SIRET_API: ${{vars.INSEE_SIRET_API}}
          INSEE_AUTHENTICATION_API: ${{vars.INSEE_AUTHENTICATION_API}}
          INSEE_BASE64_CONSUMER_KEY_SECRET: ${{secrets.INSEE_BASE64_CONSUMER_KEY_SECRET}}
          JWT_DOMAIN: ${{secrets.JWT_DOMAIN}}
          JWT_AUDIENCE: ${{secrets.JWT_AUDIENCE}}
          MINDEE_API_KEY: ${{secrets.MINDEE_API_KEY}}
          # only for tests
          JWT_CLIENT_ID: ${{secrets.JWT_CLIENT_ID}}
          JWT_CLIENT_SECRET: ${{secrets.JWT_CLIENT_SECRET}}
          STAFF_MAIL: ${{secrets.STAFF_MAIL}}
          STAFF_PASSWORD: ${{secrets.STAFF_PASSWORD}}
          USER_MAIL: ${{secrets.USER_MAIL}}
          USER_PASSWORD: ${{secrets.USER_PASSWORD}}
      - name: Test with mindee
        if: ${{ contains(github.event.head_commit.message, 'mindee') }}
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          build-root-directory: app
          arguments: |
            mindeeTest
            --stacktrace
        env:
          INSEE_BASE_API: ${{vars.INSEE_BASE_API}}
          INSEE_SIRET_API: ${{vars.INSEE_SIRET_API}}
          INSEE_AUTHENTICATION_API: ${{vars.INSEE_AUTHENTICATION_API}}
          INSEE_BASE64_CONSUMER_KEY_SECRET: ${{secrets.INSEE_BASE64_CONSUMER_KEY_SECRET}}
          JWT_DOMAIN: ${{secrets.JWT_DOMAIN}}
          JWT_AUDIENCE: ${{secrets.JWT_AUDIENCE}}
          MINDEE_API_KEY: ${{secrets.MINDEE_API_KEY}}
          # only for tests
          JWT_CLIENT_ID: ${{secrets.JWT_CLIENT_ID}}
          JWT_CLIENT_SECRET: ${{secrets.JWT_CLIENT_SECRET}}
          STAFF_MAIL: ${{secrets.STAFF_MAIL}}
          STAFF_PASSWORD: ${{secrets.STAFF_PASSWORD}}
          USER_MAIL: ${{secrets.USER_MAIL}}
          USER_PASSWORD: ${{secrets.USER_PASSWORD}}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: build/reports/kover/report.xml
          fail_ci_if_error: true
          verbose: true
      - name: Build Docker image
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          build-root-directory: app
          arguments: --no-daemon jib
        env:
          DOCKER_USERNAME: ${{github.actor}}
          DOCKER_PASSWORD: ${{secrets.GITHUB_TOKEN}}
          DOCKER_REF: ${{ github.ref_name == 'main' && 'latest' || format('ci-{0}', github.event.pull_request.number) }}